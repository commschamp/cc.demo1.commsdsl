name: Github Actions Build

on: [push]

env:
  COMMS_BRANCH: develop
  COMMSDSL_BRANCH: develop
  CC_TOOLS_QT_BRANCH: v4.0

jobs:
  build_gcc_ubuntu_18_04:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [4.8, 5, 6, 7]
        cpp: [11, 14]

    steps:
    - uses: actions/checkout@v2

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install libqt5gui5 qtbase5-dev libboost-all-dev libxml2-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}} gcc-8 g++-8

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build    

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}
        CC_COMMSDSL: gcc-8
        CXX_COMMSDSL: g++-8
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMS_TAG: ${{env.COMMS_BRANCH}}
        COMMSDSL_TAG: ${{env.COMMSDSL_BRANCH}}
        CC_TOOLS_QT_TAG: ${{env.CC_TOOLS_QT_BRANCH}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install -DDEMO1_BUILD_GEN_PROTOCOL=ON -DDEMO1_BUILD_GEN_TEST=ON -DDEMO1_BUILD_GEN_TOOLS=ON
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build Target Protocol Project
      working-directory: ${{runner.workspace}}/build/build.output
      shell: bash
      run: cmake --build . --target install
      env:
        VERBOSE: 1 

